#!/usr/bin/env bash
DOCKER_VERSION_RESPONSE=$(docker -v)
EXPECTED_RESPONSE="Docker version "
if test "${DOCKER_VERSION_RESPONSE#*$EXPECTED_RESPONSE}" != "$DOCKER_VERSION_RESPONSE"; then
  if [ -n "$JOB_BASE_NAME" ]; then
    DOCKERINSPECT_CONTAINER="$JOB_BASE_NAME"
  fi
  if [ -z "$DOCKERINSPECT_CONTAINER" ]; then
    DOCKERINSPECT_CONTAINER="dockerinspect"
  fi
  DOCKERINSPECT_CONTAINER=${DOCKERINSPECT_CONTAINER// /_}
  if [ -z "$DOCKERINSPECT_IMAGE" ]; then
    export DOCKERINSPECT_IMAGE="shibme/dockerinspect"
    docker pull "$DOCKERINSPECT_IMAGE"
  fi

  DOCKERINSPECT_CACHE="$(pwd)/trivy-cache"
  mkdir -p $DOCKERINSPECT_CACHE
  DOCKERINSPECT_WORKSPACE="$(pwd)/trivy-workspace"
  mkdir -p $DOCKERINSPECT_WORKSPACE

  DOCKERINSPECT_COMMAND="docker run --rm "
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e DOCKERINSPECT_TARGET_IMAGE"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e DOCKERINSPECT_PROJECT_NAME"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e DOCKERINSPECT_DEPENDENCY_SCAN"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_CONFIG"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_PROJECT_KEY"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_ISSUE_TYPE"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_PRIORITY_P0"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_PRIORITY_P1"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_PRIORITY_P2"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_PRIORITY_P3"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_PRIORITY_P4"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_TRACKER_NAME"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_TRACKER_ENDPOINT"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_TRACKER_USERNAME"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_TRACKER_PASSWORD"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_TRACKER_API_KEY"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_DRY_RUN"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_EXIT_CODE_NEW_ISSUES"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_EXIT_CODE_FAILURE"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_UPDATE_SUMMARY"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_UPDATE_DESCRIPTION"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_UPDATE_LABELS"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_PRIORITIZE_UP"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_PRIORITIZE_DOWN"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_ASSIGNEE"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_REOPEN_STATUS"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_RESOLVED_STATUSES"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_CLOSED_STATUSES"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_IGNORE_LABELS"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_IGNORE_STATUSES"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_AUTO_REOPEN_AFTER"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_AUTO_REOPEN_TRANSITION"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_AUTO_REOPEN_COMMENT"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_AUTO_RESOLVE_AFTER"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_AUTO_RESOLVE_TRANSITION"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -e STEWARD_AUTO_RESOLVE_COMMENT"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND --name $DOCKERINSPECT_CONTAINER"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -v $DOCKERINSPECT_CACHE:/root/.cache/"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -v $DOCKERINSPECT_WORKSPACE:/dockerinspect/"
  DOCKERINSPECT_COMMAND="$DOCKERINSPECT_COMMAND -v /var/run/docker.sock:/var/run/docker.sock $DOCKERINSPECT_IMAGE"

  echo "Now running: $DOCKERINSPECT_CONTAINER"
  echo $DOCKERINSPECT_COMMAND | bash
else
  echo "Please install docker client before you begin."
  exit 1
fi