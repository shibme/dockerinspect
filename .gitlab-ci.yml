stages:
  - "Build"
  - "Release"
  - "Mirror Image"

Maven Build:
  image: maven:3-jdk-11
  stage: "Build"
  script: mvn clean install
  artifacts:
    expire_in: 1 day
    paths:
      - target/dockerinspect-jar-with-dependencies.jar
  only:
    - master

Releasing Docker Image:
  image: docker:latest
  services:
    - docker:dind
  stage: "Release"
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
    - docker logout $CI_REGISTRY
  only:
    - master

Mirroring to DockerHub:
  image: docker:latest
  services:
    - docker:dind
  stage: "Mirror Image"
  variables:
    DOCKER_IMAGE: "shibme/dockerinspect"
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE
    - docker logout $CI_REGISTRY
    - echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker tag $CI_REGISTRY_IMAGE $DOCKER_IMAGE
    - docker push $DOCKER_IMAGE
    - docker logout
  only:
    - master

Mirroring to AWS ECR Public:
  image: docker:latest
  services:
    - docker:dind
  stage: "Mirror Image"
  variables:
    DOCKER_REGISTRY: "public.ecr.aws"
    DOCKER_IMAGE: "public.ecr.aws/shibme/dockerinspect"
  before_script:
    - apk add aws-cli
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE
    - docker logout $CI_REGISTRY
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - docker tag $CI_REGISTRY_IMAGE $DOCKER_IMAGE
    - docker push $DOCKER_IMAGE
    - docker logout $DOCKER_REGISTRY
  only:
    - master